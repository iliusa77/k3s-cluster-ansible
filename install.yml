---
- name: Setup K3S server
  hosts: server
  become: true
  vars:
    user: vagrant
    install_controllers: true
  tasks:
    - name: Install k3s server
      shell: "curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION={{ k3s_version }} sh -" 

    - name: Store Master node-token
      slurp:
        src: /var/lib/rancher/k3s/server/node-token
      register: token

    - local_action: copy content={{ token['content'] | b64decode }} dest=token
      become: false

    # - name: Output token value
    #   debug: msg="{{ token['content'] | b64decode}}"

    - name: Update k3s-server unit file
      lineinfile:
        path: /etc/systemd/system/k3s.service
        search_string: "server"
        line: "server --node-external-ip {{ groups['server'] | join('[]') }}"

    - name: Restart service k3s-server
      systemd_service:
        state: restarted
        daemon_reload: true
        name: k3s.service

    - name: Change config permissions
      shell: sudo chmod a=r /etc/rancher/k3s/k3s.yaml

    - name: Creates kubeconfig directory
      file:
        path: "/home/{{ user }}/.kube"
        state: directory
        owner: "{{ user }}"
        group: "{{ user }}"

    - name: Prepare kubeconfig for Lens
      copy:
        src: /etc/rancher/k3s/k3s.yaml
        dest: "/home/{{ user }}/.kube/config"
        remote_src: yes

    - name: Kubectl alias
      shell: echo 'alias k=\"kubectl\"' >> /home/{{ user }}/.bashrc
      tags: kubectl_alias

    - name: Install ArgoCD controller
      shell: |
        kubectl create namespace argocd
        kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
      when: install_controllers == true
      tags: argocd

    - name: Install apt pre-requisites
      apt:
        name: python3-pip
        state: present
        update_cache: yes
      tags: argocd

    - name: Install kubernetes pre-requisites
      pip:
        name:
          - pyyaml
          - kubernetes
      tags: argocd

    - name: Deploy AgroCD IngressRoute
      kubernetes.core.k8s:
        kubeconfig: "/home/{{ user }}/.kube/config"
        state: present
        definition:
          apiVersion: traefik.io/v1alpha1
          kind: IngressRoute
          metadata:
            name: argocd-server
            namespace: argocd
          spec:
            entryPoints:
              - websecure
            routes:
              - kind: Rule
                match: Host(`argocd.example.com`)
                priority: 10
                services:
                  - name: argocd-server
                    port: 80
              - kind: Rule
                match: Host(`argocd.example.com`) && Header(`Content-Type`, `application/grpc`)
                priority: 11
                services:
                  - name: argocd-server
                    port: 80
                    scheme: h2c
            tls:
              certResolver: default
      tags: argocd
        

- name: Setup K3S agent
  hosts: agent
  become: true
  tasks:
    - name: Set token
      set_fact:
        k3s_server_token: "{{ lookup('ansible.builtin.file', 'token') }}"

    - name: Output token value
      debug: msg="{{ groups['server'] | join('[]') }}"

    - name: Install k3s agent
      shell: "curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION={{ k3s_version }} K3S_URL=https://{{ groups['server'] | join('[]') }}:6443 K3S_TOKEN={{ k3s_server_token }} sh -"

    - name: Restart service k3s-agent
      systemd_service:
        state: restarted
        daemon_reload: true
        name: k3s-agent.service
  
